{{- if .Values.catalogs }}
{{- range $cat := .Values.catalogs }}
{{- if $cat.enabled }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $cat.name }}-{{ include "hivedb.fullname" $ }}
  labels:
    {{- include "hivedb.labels" $ | nindent 4 }}
    app.kubernetes.io/instance: {{ $cat.name }}
  annotations:
    template.alpha.openshift.io/wait-for-ready: "true"
spec:
  replicas: {{ $cat.replicaCountDb }}
  selector:
    matchLabels:
      {{- include "hivedb.selectorLabels" $ | nindent 6 }}
      app.kubernetes.io/instance: {{ $cat.name }}
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        {{- include "hivedb.selectorLabels" $ | nindent 8 }}
    spec:
      containers:
        - name: postgresql
          image: {{ $.Values.imageDb.repository }}:{{ $.Values.imageDb.tag }}
          imagePullPolicy: {{ $.Values.imageDb.pullPolicy }}
          ports:
            - containerPort: 5432
              protocol: TCP
          readinessProbe:
            exec:
              command:
                - "/usr/libexec/check-container"
          livenessProbe:
            exec:
              command:
                - "/usr/libexec/check-container"
                - "--live"
          env:
            - name: POSTGRESQL_USER
              valueFrom:
                secretKeyRef:
                  name: {{ $cat.name }}-hive-db
                  key: database-user
            - name: POSTGRESQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ $cat.name }}-hive-db
                  key: database-password
            - name: POSTGRESQL_DATABASE
              valueFrom:
                secretKeyRef:
                  name: {{ $cat.name }}-hive-db
                  key: database-name
          resources:
            {{- toYaml $.Values.resourcesDb | nindent 12 }}
          volumeMounts:
            - name: "postgresql-data"
              mountPath: "/var/lib/pgsql/data"
          terminationMessagePath: "/dev/termination-log"
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: {{ include "hivedb.serviceAccountName" $ }}
      serviceAccountName: {{ include "hivedb.serviceAccountName" $ }}
      terminationGracePeriodSeconds: 5
      volumes:
        - name: "postgresql-data"
          persistentVolumeClaim:
            claimName: {{ $cat.name }}-hive-db-volume
{{- end }}
{{- end }}
{{- end }}
